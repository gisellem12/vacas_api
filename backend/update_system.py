#!/usr/bin/env python3
"""
Script de actualizaci√≥n del sistema
Ejecuta actualizaciones mientras la IA est√° desactivada en modo de mantenimiento
"""

import requests
import time
import json
import sys
import os
from datetime import datetime

# Configuraci√≥n
BASE_URL = "http://localhost:8000"  # Cambiar por la URL de tu servidor en producci√≥n
ADMIN_TOKEN = None  # En producci√≥n, usar autenticaci√≥n real

def log(message):
    """Funci√≥n de logging con timestamp"""
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    print(f"[{timestamp}] {message}")

def check_system_status():
    """Verifica el estado actual del sistema"""
    try:
        response = requests.get(f"{BASE_URL}/status", timeout=10)
        if response.status_code == 200:
            status = response.json()
            log(f"Estado del sistema: {status['status']}")
            log(f"Modo mantenimiento: {status['maintenance_mode']}")
            log(f"IA habilitada: {status['ai_enabled']}")
            return status
        else:
            log(f"Error verificando estado: {response.status_code}")
            return None
    except Exception as e:
        log(f"Error conectando al sistema: {e}")
        return None

def enable_maintenance_mode(message="Actualizaci√≥n del sistema en progreso..."):
    """Activa el modo de mantenimiento"""
    try:
        log("üîß Activando modo de mantenimiento...")
        response = requests.post(
            f"{BASE_URL}/admin/maintenance/enable",
            params={"message": message},
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            log(f"‚úÖ Modo de mantenimiento activado: {result['message']}")
            return True
        else:
            log(f"‚ùå Error activando modo de mantenimiento: {response.status_code}")
            return False
    except Exception as e:
        log(f"‚ùå Error activando modo de mantenimiento: {e}")
        return False

def disable_maintenance_mode():
    """Desactiva el modo de mantenimiento"""
    try:
        log("üîß Desactivando modo de mantenimiento...")
        response = requests.post(f"{BASE_URL}/admin/maintenance/disable", timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            log(f"‚úÖ Modo de mantenimiento desactivado: {result['message']}")
            return True
        else:
            log(f"‚ùå Error desactivando modo de mantenimiento: {response.status_code}")
            return False
    except Exception as e:
        log(f"‚ùå Error desactivando modo de mantenimiento: {e}")
        return False

def run_system_update():
    """Ejecuta la actualizaci√≥n del sistema"""
    log("üöÄ Iniciando actualizaci√≥n del sistema...")
    
    # Simular tareas de actualizaci√≥n
    update_tasks = [
        "Actualizando modelos de IA...",
        "Optimizando base de datos...",
        "Instalando nuevas dependencias...",
        "Actualizando configuraciones...",
        "Verificando integridad del sistema..."
    ]
    
    for i, task in enumerate(update_tasks, 1):
        log(f"üìã Tarea {i}/{len(update_tasks)}: {task}")
        time.sleep(2)  # Simular tiempo de procesamiento
    
    log("‚úÖ Actualizaci√≥n completada exitosamente")
    return True

def main():
    """Funci√≥n principal del script de actualizaci√≥n"""
    log("üéØ Iniciando proceso de actualizaci√≥n del sistema")
    
    # 1. Verificar estado inicial
    log("üìä Verificando estado inicial del sistema...")
    initial_status = check_system_status()
    if not initial_status:
        log("‚ùå No se puede conectar al sistema. Abortando actualizaci√≥n.")
        sys.exit(1)
    
    # 2. Activar modo de mantenimiento
    if not enable_maintenance_mode("Actualizaci√≥n del sistema - IA desactivada temporalmente"):
        log("‚ùå No se pudo activar el modo de mantenimiento. Abortando.")
        sys.exit(1)
    
    # 3. Verificar que el modo de mantenimiento est√° activo
    log("üîç Verificando que el modo de mantenimiento est√° activo...")
    maintenance_status = check_system_status()
    if not maintenance_status or not maintenance_status['maintenance_mode']:
        log("‚ùå El modo de mantenimiento no se activ√≥ correctamente. Abortando.")
        sys.exit(1)
    
    # 4. Ejecutar actualizaci√≥n
    try:
        success = run_system_update()
        if not success:
            log("‚ùå La actualizaci√≥n fall√≥. El sistema permanecer√° en modo de mantenimiento.")
            sys.exit(1)
    except Exception as e:
        log(f"‚ùå Error durante la actualizaci√≥n: {e}")
        log("‚ö†Ô∏è El sistema permanecer√° en modo de mantenimiento para diagn√≥stico.")
        sys.exit(1)
    
    # 5. Desactivar modo de mantenimiento
    if not disable_maintenance_mode():
        log("‚ùå Error desactivando modo de mantenimiento. Revisar manualmente.")
        sys.exit(1)
    
    # 6. Verificaci√≥n final
    log("üîç Verificaci√≥n final del sistema...")
    final_status = check_system_status()
    if final_status and final_status['ai_enabled']:
        log("‚úÖ Actualizaci√≥n completada exitosamente. Sistema operativo.")
    else:
        log("‚ö†Ô∏è Advertencia: El sistema podr√≠a no estar completamente operativo.")
    
    log("üéâ Proceso de actualizaci√≥n finalizado")

if __name__ == "__main__":
    main()
